@model oneToManyToMany.Models.DepartmentViewModel

@{
    ViewBag.Title = "Edit Department";
}

<h2>Edit Department</h2>

@using (Html.BeginForm("Edit", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Department</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Employees and Projects</h4>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Employee Name</th>
                    <th>Project Name</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="employees-table">
                @for (int i = 0; i < Model.Employees.Count; i++)
                {
                    var employee = Model.Employees[i];
                    for (int j = 0; j < employee.Projects.Count; j++)
                    {
                        var project = employee.Projects[j];
                        <tr id="employee-@i-project-@j">
                            @if (j == 0)
                            {
                                <td rowspan="@employee.Projects.Count">
                                    @Html.EditorFor(m => m.Employees[i].FullName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(m => m.Employees[i].FullName, "", new { @class = "text-danger" })
                                </td>
                            }
                            <td>
                                @Html.EditorFor(m => m.Employees[i].Projects[j].ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Employees[i].Projects[j].ProjectName, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.TextAreaFor(m => m.Employees[i].Projects[j].Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Employees[i].Projects[j].Description, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger remove-project" data-employee-index="@i" data-project-index="@j">Remove Project</button>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td colspan="4">
                            <button type="button" class="btn btn-primary add-project" data-employee-index="@i">Add Project</button>
                            <button type="button" class="btn btn-danger remove-employee" data-employee-index="@i">Remove Employee</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <button type="button" class="btn btn-primary add-employee">Add Employee</button>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // Function to remove an employee
            $(document).on('click', '.remove-employee', function() {
                var index = $(this).data('employee-index');
                // Remove all rows related to the employee
                $('tr[id^="employee-' + index + '-"]').remove();
            });

            // Function to remove a project
            $(document).on('click', '.remove-project', function() {
                var empIndex = $(this).data('employee-index');
                var projIndex = $(this).data('project-index');
                $('#employee-' + empIndex + '-project-' + projIndex).remove();
            });

            // Function to add a new project
            $(document).on('click', '.add-project', function() {
                var empIndex = $(this).data('employee-index');
                var projectsCount = $('tr[id^="employee-' + empIndex + '-project-"]').length;
                var newProjectHtml = `
                    <tr id="employee-${empIndex}-project-${projectsCount}">
                        <td>
                            <input type="text" name="Employees[${empIndex}].Projects[${projectsCount}].ProjectName" class="form-control" />
                        </td>
                        <td>
                            <textarea name="Employees[${empIndex}].Projects[${projectsCount}].Description" class="form-control"></textarea>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger remove-project" data-employee-index="${empIndex}" data-project-index="${projectsCount}">Remove Project</button>
                        </td>
                    </tr>
                `;
                $('#employees-table').append(newProjectHtml);
            });

            // Function to add a new employee
            $('.add-employee').click(function() {
                var employeeCount = $('tr[id^="employee-"]').length / 2; // Assuming each employee has at least one project
                var newEmployeeHtml = `
                    <tr id="employee-${employeeCount}-project-0">
                        <td>
                            <input type="text" name="Employees[${employeeCount}].FullName" class="form-control" />
                        </td>
                        <td>
                            <input type="text" name="Employees[${employeeCount}].Projects[0].ProjectName" class="form-control" />
                        </td>
                        <td>
                            <textarea name="Employees[${employeeCount}].Projects[0].Description" class="form-control"></textarea>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger remove-project" data-employee-index="${employeeCount}" data-project-index="0">Remove Project</button>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4">
                            <button type="button" class="btn btn-primary add-project" data-employee-index="${employeeCount}">Add Project</button>
                            <button type="button" class="btn btn-danger remove-employee" data-employee-index="${employeeCount}">Remove Employee</button>
                        </td>
                    </tr>
                `;
                $('#employees-table').append(newEmployeeHtml);
            });
        });
    </script>
}
